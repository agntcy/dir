// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: objectmanager/record.proto

package objectmanager

import (
	v1alpha1 "github.com/agntcy/dir/api/core/v1alpha1"
	v1alpha2 "github.com/agntcy/dir/api/core/v1alpha2"
	v1alpha21 "github.com/agntcy/dir/api/store/v1alpha2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordObjectType int32

const (
	RecordObjectType_RECORD_OBJECT_TYPE_UNSPECIFIED        RecordObjectType = 0 // invalid type, should not be used
	RecordObjectType_RECORD_OBJECT_TYPE_OASF_V1ALPHA1_JSON RecordObjectType = 1001
	RecordObjectType_RECORD_OBJECT_TYPE_OASF_V1ALPHA2_JSON RecordObjectType = 1002
)

// Enum value maps for RecordObjectType.
var (
	RecordObjectType_name = map[int32]string{
		0:    "RECORD_OBJECT_TYPE_UNSPECIFIED",
		1001: "RECORD_OBJECT_TYPE_OASF_V1ALPHA1_JSON",
		1002: "RECORD_OBJECT_TYPE_OASF_V1ALPHA2_JSON",
	}
	RecordObjectType_value = map[string]int32{
		"RECORD_OBJECT_TYPE_UNSPECIFIED":        0,
		"RECORD_OBJECT_TYPE_OASF_V1ALPHA1_JSON": 1001,
		"RECORD_OBJECT_TYPE_OASF_V1ALPHA2_JSON": 1002,
	}
)

func (x RecordObjectType) Enum() *RecordObjectType {
	p := new(RecordObjectType)
	*p = x
	return p
}

func (x RecordObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_objectmanager_record_proto_enumTypes[0].Descriptor()
}

func (RecordObjectType) Type() protoreflect.EnumType {
	return &file_objectmanager_record_proto_enumTypes[0]
}

func (x RecordObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordObjectType.Descriptor instead.
func (RecordObjectType) EnumDescriptor() ([]byte, []int) {
	return file_objectmanager_record_proto_rawDescGZIP(), []int{0}
}

// Unifies different agent records into a single object.
// Allows to handle different versions of record objects
// in a single way, without worrying about the schema.
//
// RecordObject and Object are composable types.
type RecordObject struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CID of the record.
	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// Type of the record.
	Type RecordObjectType `protobuf:"varint,2,opt,name=type,proto3,enum=objectmanager.RecordObjectType" json:"type,omitempty"`
	// Data of the record.
	Record        *RecordObjectData `protobuf:"bytes,3,opt,name=record,proto3" json:"record,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordObject) Reset() {
	*x = RecordObject{}
	mi := &file_objectmanager_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordObject) ProtoMessage() {}

func (x *RecordObject) ProtoReflect() protoreflect.Message {
	mi := &file_objectmanager_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordObject.ProtoReflect.Descriptor instead.
func (*RecordObject) Descriptor() ([]byte, []int) {
	return file_objectmanager_record_proto_rawDescGZIP(), []int{0}
}

func (x *RecordObject) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *RecordObject) GetType() RecordObjectType {
	if x != nil {
		return x.Type
	}
	return RecordObjectType_RECORD_OBJECT_TYPE_UNSPECIFIED
}

func (x *RecordObject) GetRecord() *RecordObjectData {
	if x != nil {
		return x.Record
	}
	return nil
}

type RecordObjectData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*RecordObjectData_RecordV1Alpha1
	//	*RecordObjectData_RecordV1Alpha2
	Data          isRecordObjectData_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordObjectData) Reset() {
	*x = RecordObjectData{}
	mi := &file_objectmanager_record_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordObjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordObjectData) ProtoMessage() {}

func (x *RecordObjectData) ProtoReflect() protoreflect.Message {
	mi := &file_objectmanager_record_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordObjectData.ProtoReflect.Descriptor instead.
func (*RecordObjectData) Descriptor() ([]byte, []int) {
	return file_objectmanager_record_proto_rawDescGZIP(), []int{1}
}

func (x *RecordObjectData) GetData() isRecordObjectData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RecordObjectData) GetRecordV1Alpha1() *v1alpha1.Agent {
	if x != nil {
		if x, ok := x.Data.(*RecordObjectData_RecordV1Alpha1); ok {
			return x.RecordV1Alpha1
		}
	}
	return nil
}

func (x *RecordObjectData) GetRecordV1Alpha2() *v1alpha2.Record {
	if x != nil {
		if x, ok := x.Data.(*RecordObjectData_RecordV1Alpha2); ok {
			return x.RecordV1Alpha2
		}
	}
	return nil
}

type isRecordObjectData_Data interface {
	isRecordObjectData_Data()
}

type RecordObjectData_RecordV1Alpha1 struct {
	RecordV1Alpha1 *v1alpha1.Agent `protobuf:"bytes,1,opt,name=record_v1alpha1,json=recordV1alpha1,proto3,oneof"`
}

type RecordObjectData_RecordV1Alpha2 struct {
	RecordV1Alpha2 *v1alpha2.Record `protobuf:"bytes,2,opt,name=record_v1alpha2,json=recordV1alpha2,proto3,oneof"`
}

func (*RecordObjectData_RecordV1Alpha1) isRecordObjectData_Data() {}

func (*RecordObjectData_RecordV1Alpha2) isRecordObjectData_Data() {}

var File_objectmanager_record_proto protoreflect.FileDescriptor

var file_objectmanager_record_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x1b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8e, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x22, 0x9d, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x12, 0x40, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x2a, 0x8e, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2a, 0x0a, 0x25, 0x52, 0x45, 0x43,
	0x4f, 0x52, 0x44, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4f, 0x41, 0x53, 0x46, 0x5f, 0x56, 0x31, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x4a, 0x53,
	0x4f, 0x4e, 0x10, 0xe9, 0x07, 0x12, 0x2a, 0x0a, 0x25, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x41, 0x53, 0x46,
	0x5f, 0x56, 0x31, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x32, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0xea,
	0x07, 0x32, 0xb5, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x15, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x1b, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4e, 0x0a, 0x17, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x1a, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x9d, 0x01, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x42,
	0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x6e, 0x74, 0x63,
	0x79, 0x2f, 0x64, 0x69, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0xa2, 0x02, 0x03, 0x4f, 0x58, 0x58, 0xaa, 0x02, 0x0d,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0xca, 0x02, 0x0d,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0xe2, 0x02, 0x19,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_objectmanager_record_proto_rawDescOnce sync.Once
	file_objectmanager_record_proto_rawDescData []byte
)

func file_objectmanager_record_proto_rawDescGZIP() []byte {
	file_objectmanager_record_proto_rawDescOnce.Do(func() {
		file_objectmanager_record_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_objectmanager_record_proto_rawDesc), len(file_objectmanager_record_proto_rawDesc)))
	})
	return file_objectmanager_record_proto_rawDescData
}

var file_objectmanager_record_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_objectmanager_record_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_objectmanager_record_proto_goTypes = []any{
	(RecordObjectType)(0),    // 0: objectmanager.RecordObjectType
	(*RecordObject)(nil),     // 1: objectmanager.RecordObject
	(*RecordObjectData)(nil), // 2: objectmanager.RecordObjectData
	(*v1alpha1.Agent)(nil),   // 3: core.v1alpha1.Agent
	(*v1alpha2.Record)(nil),  // 4: core.v1alpha2.Record
	(*v1alpha21.Object)(nil), // 5: store.v1alpha2.Object
}
var file_objectmanager_record_proto_depIdxs = []int32{
	0, // 0: objectmanager.RecordObject.type:type_name -> objectmanager.RecordObjectType
	2, // 1: objectmanager.RecordObject.record:type_name -> objectmanager.RecordObjectData
	3, // 2: objectmanager.RecordObjectData.record_v1alpha1:type_name -> core.v1alpha1.Agent
	4, // 3: objectmanager.RecordObjectData.record_v1alpha2:type_name -> core.v1alpha2.Record
	5, // 4: objectmanager.RecordObjectConverter.ConvertToRecordObject:input_type -> store.v1alpha2.Object
	1, // 5: objectmanager.RecordObjectConverter.ConvertFromRecordObject:input_type -> objectmanager.RecordObject
	1, // 6: objectmanager.RecordObjectConverter.ConvertToRecordObject:output_type -> objectmanager.RecordObject
	5, // 7: objectmanager.RecordObjectConverter.ConvertFromRecordObject:output_type -> store.v1alpha2.Object
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_objectmanager_record_proto_init() }
func file_objectmanager_record_proto_init() {
	if File_objectmanager_record_proto != nil {
		return
	}
	file_objectmanager_record_proto_msgTypes[1].OneofWrappers = []any{
		(*RecordObjectData_RecordV1Alpha1)(nil),
		(*RecordObjectData_RecordV1Alpha2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_objectmanager_record_proto_rawDesc), len(file_objectmanager_record_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_objectmanager_record_proto_goTypes,
		DependencyIndexes: file_objectmanager_record_proto_depIdxs,
		EnumInfos:         file_objectmanager_record_proto_enumTypes,
		MessageInfos:      file_objectmanager_record_proto_msgTypes,
	}.Build()
	File_objectmanager_record_proto = out.File
	file_objectmanager_record_proto_goTypes = nil
	file_objectmanager_record_proto_depIdxs = nil
}
