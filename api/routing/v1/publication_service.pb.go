// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: routing/v1/publication_service.proto

package routingv1

import (
	_ "github.com/agntcy/dir/api/store/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PublicationStatus represents the current state of a publication request.
// Publications progress from pending to processing to completed or failed states.
type PublicationStatus int32

const (
	// Default/unset status - should not be used in practice
	PublicationStatus_PUBLICATION_STATUS_UNSPECIFIED PublicationStatus = 0
	// Sync operation has been created but not yet started
	PublicationStatus_PUBLICATION_STATUS_PENDING PublicationStatus = 1
	// Sync operation is actively discovering and transferring objects
	PublicationStatus_PUBLICATION_STATUS_IN_PROGRESS PublicationStatus = 2
	// Sync operation has been successfully completed
	PublicationStatus_PUBLICATION_STATUS_COMPLETED PublicationStatus = 3
	// Sync operation encountered an error and stopped
	PublicationStatus_PUBLICATION_STATUS_FAILED PublicationStatus = 4
)

// Enum value maps for PublicationStatus.
var (
	PublicationStatus_name = map[int32]string{
		0: "PUBLICATION_STATUS_UNSPECIFIED",
		1: "PUBLICATION_STATUS_PENDING",
		2: "PUBLICATION_STATUS_IN_PROGRESS",
		3: "PUBLICATION_STATUS_COMPLETED",
		4: "PUBLICATION_STATUS_FAILED",
	}
	PublicationStatus_value = map[string]int32{
		"PUBLICATION_STATUS_UNSPECIFIED": 0,
		"PUBLICATION_STATUS_PENDING":     1,
		"PUBLICATION_STATUS_IN_PROGRESS": 2,
		"PUBLICATION_STATUS_COMPLETED":   3,
		"PUBLICATION_STATUS_FAILED":      4,
	}
)

func (x PublicationStatus) Enum() *PublicationStatus {
	p := new(PublicationStatus)
	*p = x
	return p
}

func (x PublicationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PublicationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_routing_v1_publication_service_proto_enumTypes[0].Descriptor()
}

func (PublicationStatus) Type() protoreflect.EnumType {
	return &file_routing_v1_publication_service_proto_enumTypes[0]
}

func (x PublicationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PublicationStatus.Descriptor instead.
func (PublicationStatus) EnumDescriptor() ([]byte, []int) {
	return file_routing_v1_publication_service_proto_rawDescGZIP(), []int{0}
}

// CreatePublicationResponse returns the result of creating a publication request.
// This includes the publication ID and any relevant metadata.
type CreatePublicationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the publication operation.
	PublicationId string `protobuf:"bytes,1,opt,name=publication_id,json=publicationId,proto3" json:"publication_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePublicationResponse) Reset() {
	*x = CreatePublicationResponse{}
	mi := &file_routing_v1_publication_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePublicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePublicationResponse) ProtoMessage() {}

func (x *CreatePublicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routing_v1_publication_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePublicationResponse.ProtoReflect.Descriptor instead.
func (*CreatePublicationResponse) Descriptor() ([]byte, []int) {
	return file_routing_v1_publication_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePublicationResponse) GetPublicationId() string {
	if x != nil {
		return x.PublicationId
	}
	return ""
}

// ListPublicationsRequest contains optional filters for listing publication requests.
type ListPublicationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional limit on the number of results to return.
	Limit *uint32 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	// Optional offset for pagination of results.
	Offset        *uint32 `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPublicationsRequest) Reset() {
	*x = ListPublicationsRequest{}
	mi := &file_routing_v1_publication_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublicationsRequest) ProtoMessage() {}

func (x *ListPublicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routing_v1_publication_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublicationsRequest.ProtoReflect.Descriptor instead.
func (*ListPublicationsRequest) Descriptor() ([]byte, []int) {
	return file_routing_v1_publication_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListPublicationsRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListPublicationsRequest) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

// ListPublicationsItem represents a single publication request in the list response.
// Contains publication details including ID, status, and creation timestamp.
type ListPublicationsItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the publication operation.
	PublicationId string `protobuf:"bytes,1,opt,name=publication_id,json=publicationId,proto3" json:"publication_id,omitempty"`
	// Current status of the publication operation.
	Status PublicationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=routing.v1.PublicationStatus" json:"status,omitempty"`
	// Timestamp when the publication operation was created in the RFC3339 format.
	// Specs: https://www.rfc-editor.org/rfc/rfc3339.html
	CreatedTime string `protobuf:"bytes,3,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// Timestamp of the most recent status update for this publication in the RFC3339 format.
	LastUpdateTime string `protobuf:"bytes,4,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListPublicationsItem) Reset() {
	*x = ListPublicationsItem{}
	mi := &file_routing_v1_publication_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublicationsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublicationsItem) ProtoMessage() {}

func (x *ListPublicationsItem) ProtoReflect() protoreflect.Message {
	mi := &file_routing_v1_publication_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublicationsItem.ProtoReflect.Descriptor instead.
func (*ListPublicationsItem) Descriptor() ([]byte, []int) {
	return file_routing_v1_publication_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListPublicationsItem) GetPublicationId() string {
	if x != nil {
		return x.PublicationId
	}
	return ""
}

func (x *ListPublicationsItem) GetStatus() PublicationStatus {
	if x != nil {
		return x.Status
	}
	return PublicationStatus_PUBLICATION_STATUS_UNSPECIFIED
}

func (x *ListPublicationsItem) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *ListPublicationsItem) GetLastUpdateTime() string {
	if x != nil {
		return x.LastUpdateTime
	}
	return ""
}

// GetPublicationRequest specifies which publication to retrieve by its identifier.
type GetPublicationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the publication operation to query.
	PublicationId string `protobuf:"bytes,1,opt,name=publication_id,json=publicationId,proto3" json:"publication_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublicationRequest) Reset() {
	*x = GetPublicationRequest{}
	mi := &file_routing_v1_publication_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicationRequest) ProtoMessage() {}

func (x *GetPublicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routing_v1_publication_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicationRequest.ProtoReflect.Descriptor instead.
func (*GetPublicationRequest) Descriptor() ([]byte, []int) {
	return file_routing_v1_publication_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetPublicationRequest) GetPublicationId() string {
	if x != nil {
		return x.PublicationId
	}
	return ""
}

// GetPublicationResponse contains the full details of a specific publication request.
// Includes status, progress information, and any error details if applicable.
type GetPublicationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the publication operation.
	PublicationId string `protobuf:"bytes,1,opt,name=publication_id,json=publicationId,proto3" json:"publication_id,omitempty"`
	// Current status of the publication operation.
	Status PublicationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=routing.v1.PublicationStatus" json:"status,omitempty"`
	// Timestamp when the publication operation was created in the RFC3339 format.
	// Specs: https://www.rfc-editor.org/rfc/rfc3339.html
	CreatedTime string `protobuf:"bytes,3,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// Timestamp of the most recent status update for this publication in the RFC3339 format.
	LastUpdateTime string `protobuf:"bytes,4,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPublicationResponse) Reset() {
	*x = GetPublicationResponse{}
	mi := &file_routing_v1_publication_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicationResponse) ProtoMessage() {}

func (x *GetPublicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routing_v1_publication_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicationResponse.ProtoReflect.Descriptor instead.
func (*GetPublicationResponse) Descriptor() ([]byte, []int) {
	return file_routing_v1_publication_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetPublicationResponse) GetPublicationId() string {
	if x != nil {
		return x.PublicationId
	}
	return ""
}

func (x *GetPublicationResponse) GetStatus() PublicationStatus {
	if x != nil {
		return x.Status
	}
	return PublicationStatus_PUBLICATION_STATUS_UNSPECIFIED
}

func (x *GetPublicationResponse) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *GetPublicationResponse) GetLastUpdateTime() string {
	if x != nil {
		return x.LastUpdateTime
	}
	return ""
}

var File_routing_v1_publication_service_proto protoreflect.FileDescriptor

var file_routing_v1_publication_service_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0xbc,
	0x01, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d,
	0x0a, 0x19, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x32, 0xa2, 0x02,
	0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x23, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0xa2, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x6e,
	0x74, 0x63, 0x79, 0x2f, 0x64, 0x69, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x16, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_routing_v1_publication_service_proto_rawDescOnce sync.Once
	file_routing_v1_publication_service_proto_rawDescData []byte
)

func file_routing_v1_publication_service_proto_rawDescGZIP() []byte {
	file_routing_v1_publication_service_proto_rawDescOnce.Do(func() {
		file_routing_v1_publication_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_routing_v1_publication_service_proto_rawDesc), len(file_routing_v1_publication_service_proto_rawDesc)))
	})
	return file_routing_v1_publication_service_proto_rawDescData
}

var file_routing_v1_publication_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_routing_v1_publication_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_routing_v1_publication_service_proto_goTypes = []any{
	(PublicationStatus)(0),            // 0: routing.v1.PublicationStatus
	(*CreatePublicationResponse)(nil), // 1: routing.v1.CreatePublicationResponse
	(*ListPublicationsRequest)(nil),   // 2: routing.v1.ListPublicationsRequest
	(*ListPublicationsItem)(nil),      // 3: routing.v1.ListPublicationsItem
	(*GetPublicationRequest)(nil),     // 4: routing.v1.GetPublicationRequest
	(*GetPublicationResponse)(nil),    // 5: routing.v1.GetPublicationResponse
	(*PublishRequest)(nil),            // 6: routing.v1.PublishRequest
}
var file_routing_v1_publication_service_proto_depIdxs = []int32{
	0, // 0: routing.v1.ListPublicationsItem.status:type_name -> routing.v1.PublicationStatus
	0, // 1: routing.v1.GetPublicationResponse.status:type_name -> routing.v1.PublicationStatus
	6, // 2: routing.v1.PublicationService.CreatePublication:input_type -> routing.v1.PublishRequest
	2, // 3: routing.v1.PublicationService.ListPublications:input_type -> routing.v1.ListPublicationsRequest
	4, // 4: routing.v1.PublicationService.GetPublication:input_type -> routing.v1.GetPublicationRequest
	1, // 5: routing.v1.PublicationService.CreatePublication:output_type -> routing.v1.CreatePublicationResponse
	3, // 6: routing.v1.PublicationService.ListPublications:output_type -> routing.v1.ListPublicationsItem
	5, // 7: routing.v1.PublicationService.GetPublication:output_type -> routing.v1.GetPublicationResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_routing_v1_publication_service_proto_init() }
func file_routing_v1_publication_service_proto_init() {
	if File_routing_v1_publication_service_proto != nil {
		return
	}
	file_routing_v1_routing_service_proto_init()
	file_routing_v1_publication_service_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_routing_v1_publication_service_proto_rawDesc), len(file_routing_v1_publication_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_routing_v1_publication_service_proto_goTypes,
		DependencyIndexes: file_routing_v1_publication_service_proto_depIdxs,
		EnumInfos:         file_routing_v1_publication_service_proto_enumTypes,
		MessageInfos:      file_routing_v1_publication_service_proto_msgTypes,
	}.Build()
	File_routing_v1_publication_service_proto = out.File
	file_routing_v1_publication_service_proto_goTypes = nil
	file_routing_v1_publication_service_proto_depIdxs = nil
}
