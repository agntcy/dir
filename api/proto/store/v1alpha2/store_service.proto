// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package store.v1alpha2;

import "core/v1/record.proto";
import "google/protobuf/empty.proto";

// Defines an interface for content-addressable storage
// service for objects.
//
// Max object size: 4MB (to fully fit in a single request)
// Max metadata size: 100KB
//
// Store service can be implemented by various storage backends,
// such as local file system, OCI registry, etc.
//
// Middleware should be used to control who can perform these RPCs.
// Policies for the middleware can be handled via separate service.
//
// Each operation is performed sequentially, meaning that
// for the N-th request, N-th response will be returned.
// If an error occurs, the stream will be cancelled.
service StoreService {
  // Push performs write operation for given records.
  rpc Push(stream core.v1.Record) returns (stream core.v1.RecordRef);

  // Pull performs read operation for given records.
  rpc Pull(stream core.v1.RecordRef) returns (stream core.v1.Record);

  // Lookup resolves basic metadata for the records.
  rpc Lookup(stream core.v1.RecordRef) returns (stream core.v1.RecordMeta);

  // Remove performs delete operation for the records.
  rpc Delete(stream core.v1.RecordRef) returns (google.protobuf.Empty);
}
