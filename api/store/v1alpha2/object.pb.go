// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: store/v1alpha2/object.proto

package storev1alpha2

import (
	v1alpha1 "github.com/agntcy/dir/api/core/v1alpha1"
	v1alpha2 "github.com/agntcy/dir/api/core/v1alpha2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ObjectSchemaType defines a list of supported schema types.
// Serves as a placeholder for required schema types
// that can be used to identify the format of the data.
// Across APIs it is only used in a string format.
type ObjectSchemaType int32

const (
	ObjectSchemaType_OBJECT_SCHEMA_TYPE_UNSPECIFIED ObjectSchemaType = 0 // ""
	ObjectSchemaType_OBJECT_SCHEMA_TYPE_RAW         ObjectSchemaType = 1 // "raw"
	ObjectSchemaType_OBJECT_SCHEMA_TYPE_RECORD      ObjectSchemaType = 2 // "oasf.agntcy.oasf.schema/objects/record"
)

// Enum value maps for ObjectSchemaType.
var (
	ObjectSchemaType_name = map[int32]string{
		0: "OBJECT_SCHEMA_TYPE_UNSPECIFIED",
		1: "OBJECT_SCHEMA_TYPE_RAW",
		2: "OBJECT_SCHEMA_TYPE_RECORD",
	}
	ObjectSchemaType_value = map[string]int32{
		"OBJECT_SCHEMA_TYPE_UNSPECIFIED": 0,
		"OBJECT_SCHEMA_TYPE_RAW":         1,
		"OBJECT_SCHEMA_TYPE_RECORD":      2,
	}
)

func (x ObjectSchemaType) Enum() *ObjectSchemaType {
	p := new(ObjectSchemaType)
	*p = x
	return p
}

func (x ObjectSchemaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectSchemaType) Descriptor() protoreflect.EnumDescriptor {
	return file_store_v1alpha2_object_proto_enumTypes[0].Descriptor()
}

func (ObjectSchemaType) Type() protoreflect.EnumType {
	return &file_store_v1alpha2_object_proto_enumTypes[0]
}

func (x ObjectSchemaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectSchemaType.Descriptor instead.
func (ObjectSchemaType) EnumDescriptor() ([]byte, []int) {
	return file_store_v1alpha2_object_proto_rawDescGZIP(), []int{0}
}

// Reference to a content-addressable object.
type ObjectRef struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Globally-unique content identifier (CID) of the object.
	// Specs: https://github.com/multiformats/cid
	Cid           string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectRef) Reset() {
	*x = ObjectRef{}
	mi := &file_store_v1alpha2_object_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectRef) ProtoMessage() {}

func (x *ObjectRef) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1alpha2_object_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectRef.ProtoReflect.Descriptor instead.
func (*ObjectRef) Descriptor() ([]byte, []int) {
	return file_store_v1alpha2_object_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectRef) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

// Object is a generic data structure that can hold
// arbitrary data. It is used to store and associate
// objects in a content-addressable store.
type Object struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Globally-unique content identifier of the object.
	// Specs: https://github.com/multiformats/cid
	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// Metadata associated with the object.
	Annotations map[string]string `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Schema type of the object.
	// Can be used to identify the format of the data.
	SchemaType string `protobuf:"bytes,3,opt,name=schema_type,json=schemaType,proto3" json:"schema_type,omitempty"`
	// Schema version of the object.
	// This is used to ensure backward and forward compatibility.
	SchemaVersion string `protobuf:"bytes,4,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	// Opaque data held by this object.
	// Clients can use schema details to handle processing.
	ObjectData    *ObjectData `protobuf:"bytes,5,opt,name=object_data,json=objectData,proto3" json:"object_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Object) Reset() {
	*x = Object{}
	mi := &file_store_v1alpha2_object_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1alpha2_object_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_store_v1alpha2_object_proto_rawDescGZIP(), []int{1}
}

func (x *Object) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Object) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Object) GetSchemaType() string {
	if x != nil {
		return x.SchemaType
	}
	return ""
}

func (x *Object) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *Object) GetObjectData() *ObjectData {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

// ObjectData is a wrapper for the data held by an object.
// This allows for flexibility in how data is stored and retrieved.
type ObjectData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*ObjectData_Raw
	//	*ObjectData_Record
	Data          isObjectData_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectData) Reset() {
	*x = ObjectData{}
	mi := &file_store_v1alpha2_object_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectData) ProtoMessage() {}

func (x *ObjectData) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1alpha2_object_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectData.ProtoReflect.Descriptor instead.
func (*ObjectData) Descriptor() ([]byte, []int) {
	return file_store_v1alpha2_object_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectData) GetData() isObjectData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ObjectData) GetRaw() []byte {
	if x != nil {
		if x, ok := x.Data.(*ObjectData_Raw); ok {
			return x.Raw
		}
	}
	return nil
}

func (x *ObjectData) GetRecord() *RecordObjectData {
	if x != nil {
		if x, ok := x.Data.(*ObjectData_Record); ok {
			return x.Record
		}
	}
	return nil
}

type isObjectData_Data interface {
	isObjectData_Data()
}

type ObjectData_Raw struct {
	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3,oneof"` // Raw binary data, used for unstructured data.
}

type ObjectData_Record struct {
	Record *RecordObjectData `protobuf:"bytes,2,opt,name=record,proto3,oneof"` // Record data, used for structured agent records.
}

func (*ObjectData_Raw) isObjectData_Data() {}

func (*ObjectData_Record) isObjectData_Data() {}

// Unifies different versions of agent records data into a single message.
// Handles compatibility for different versions of the agent record schema.
type RecordObjectData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Record:
	//
	//	*RecordObjectData_RecordV1Alpha1
	//	*RecordObjectData_RecordV1Alpha2
	Record        isRecordObjectData_Record `protobuf_oneof:"record"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordObjectData) Reset() {
	*x = RecordObjectData{}
	mi := &file_store_v1alpha2_object_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordObjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordObjectData) ProtoMessage() {}

func (x *RecordObjectData) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1alpha2_object_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordObjectData.ProtoReflect.Descriptor instead.
func (*RecordObjectData) Descriptor() ([]byte, []int) {
	return file_store_v1alpha2_object_proto_rawDescGZIP(), []int{3}
}

func (x *RecordObjectData) GetRecord() isRecordObjectData_Record {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *RecordObjectData) GetRecordV1Alpha1() *v1alpha1.Agent {
	if x != nil {
		if x, ok := x.Record.(*RecordObjectData_RecordV1Alpha1); ok {
			return x.RecordV1Alpha1
		}
	}
	return nil
}

func (x *RecordObjectData) GetRecordV1Alpha2() *v1alpha2.Record {
	if x != nil {
		if x, ok := x.Record.(*RecordObjectData_RecordV1Alpha2); ok {
			return x.RecordV1Alpha2
		}
	}
	return nil
}

type isRecordObjectData_Record interface {
	isRecordObjectData_Record()
}

type RecordObjectData_RecordV1Alpha1 struct {
	RecordV1Alpha1 *v1alpha1.Agent `protobuf:"bytes,1,opt,name=record_v1alpha1,json=recordV1alpha1,proto3,oneof"`
}

type RecordObjectData_RecordV1Alpha2 struct {
	RecordV1Alpha2 *v1alpha2.Record `protobuf:"bytes,2,opt,name=record_v1alpha2,json=recordV1alpha2,proto3,oneof"`
}

func (*RecordObjectData_RecordV1Alpha1) isRecordObjectData_Record() {}

func (*RecordObjectData_RecordV1Alpha2) isRecordObjectData_Record() {}

var File_store_v1alpha2_object_proto protoreflect.FileDescriptor

var file_store_v1alpha2_object_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a, 0x19, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x09, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x66, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x22, 0xaa, 0x02, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x49, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x64, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x03, 0x72,
	0x61, 0x77, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x06,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x12, 0x40, 0x0a, 0x0f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2a, 0x71, 0x0a, 0x10, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d,
	0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x41, 0x57, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x02, 0x42, 0xb2, 0x01, 0x0a, 0x12,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x42, 0x0b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67,
	0x6e, 0x74, 0x63, 0x79, 0x2f, 0x64, 0x69, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x3b, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa,
	0x02, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0xca, 0x02, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x32, 0xe2, 0x02, 0x1a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_store_v1alpha2_object_proto_rawDescOnce sync.Once
	file_store_v1alpha2_object_proto_rawDescData []byte
)

func file_store_v1alpha2_object_proto_rawDescGZIP() []byte {
	file_store_v1alpha2_object_proto_rawDescOnce.Do(func() {
		file_store_v1alpha2_object_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_store_v1alpha2_object_proto_rawDesc), len(file_store_v1alpha2_object_proto_rawDesc)))
	})
	return file_store_v1alpha2_object_proto_rawDescData
}

var file_store_v1alpha2_object_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_store_v1alpha2_object_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_store_v1alpha2_object_proto_goTypes = []any{
	(ObjectSchemaType)(0),    // 0: store.v1alpha2.ObjectSchemaType
	(*ObjectRef)(nil),        // 1: store.v1alpha2.ObjectRef
	(*Object)(nil),           // 2: store.v1alpha2.Object
	(*ObjectData)(nil),       // 3: store.v1alpha2.ObjectData
	(*RecordObjectData)(nil), // 4: store.v1alpha2.RecordObjectData
	nil,                      // 5: store.v1alpha2.Object.AnnotationsEntry
	(*v1alpha1.Agent)(nil),   // 6: core.v1alpha1.Agent
	(*v1alpha2.Record)(nil),  // 7: core.v1alpha2.Record
}
var file_store_v1alpha2_object_proto_depIdxs = []int32{
	5, // 0: store.v1alpha2.Object.annotations:type_name -> store.v1alpha2.Object.AnnotationsEntry
	3, // 1: store.v1alpha2.Object.object_data:type_name -> store.v1alpha2.ObjectData
	4, // 2: store.v1alpha2.ObjectData.record:type_name -> store.v1alpha2.RecordObjectData
	6, // 3: store.v1alpha2.RecordObjectData.record_v1alpha1:type_name -> core.v1alpha1.Agent
	7, // 4: store.v1alpha2.RecordObjectData.record_v1alpha2:type_name -> core.v1alpha2.Record
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_store_v1alpha2_object_proto_init() }
func file_store_v1alpha2_object_proto_init() {
	if File_store_v1alpha2_object_proto != nil {
		return
	}
	file_store_v1alpha2_object_proto_msgTypes[2].OneofWrappers = []any{
		(*ObjectData_Raw)(nil),
		(*ObjectData_Record)(nil),
	}
	file_store_v1alpha2_object_proto_msgTypes[3].OneofWrappers = []any{
		(*RecordObjectData_RecordV1Alpha1)(nil),
		(*RecordObjectData_RecordV1Alpha2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_store_v1alpha2_object_proto_rawDesc), len(file_store_v1alpha2_object_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_store_v1alpha2_object_proto_goTypes,
		DependencyIndexes: file_store_v1alpha2_object_proto_depIdxs,
		EnumInfos:         file_store_v1alpha2_object_proto_enumTypes,
		MessageInfos:      file_store_v1alpha2_object_proto_msgTypes,
	}.Build()
	File_store_v1alpha2_object_proto = out.File
	file_store_v1alpha2_object_proto_goTypes = nil
	file_store_v1alpha2_object_proto_depIdxs = nil
}
