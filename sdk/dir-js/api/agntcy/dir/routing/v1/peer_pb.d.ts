// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.9.0 with parameter "import_extension=js"
// @generated from file agntcy/dir/routing/v1/peer.proto (package agntcy.dir.routing.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file agntcy/dir/routing/v1/peer.proto.
 */
export declare const file_agntcy_dir_routing_v1_peer: GenFile;

/**
 * @generated from message agntcy.dir.routing.v1.Peer
 */
export declare type Peer = Message<"agntcy.dir.routing.v1.Peer"> & {
  /**
   * ID of a given peer, typically described by a protocol.
   * For example:
   *  - SPIFFE:   "spiffe://example.org/service/foo"
   *  - JWT:      "jwt:sub=alice,iss=https://issuer.example.com"
   *  - Tor:      "onion:abcdefghijklmno.onion"
   *  - DID:      "did:example:123456789abcdefghi"
   *  - IPFS:     "ipfs:QmYwAPJzv5CZsnAzt8auVZRn2E6sD1c4x8pN5o6d5cW4D5"
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Multiaddrs for a given peer.
   * For example:
   * - "/ip4/127.0.0.1/tcp/4001"
   * - "/ip6/::1/tcp/4001"
   * - "/dns4/example.com/tcp/443/https"
   *
   * @generated from field: repeated string addrs = 2;
   */
  addrs: string[];

  /**
   * Additional metadata about the peer.
   *
   * @generated from field: map<string, string> annotations = 3;
   */
  annotations: { [key: string]: string };

  /**
   * Used to signal the sender's connection capabilities to the peer.
   *
   * @generated from field: agntcy.dir.routing.v1.PeerConnectionType connection = 4;
   */
  connection: PeerConnectionType;
};

/**
 * Describes the message agntcy.dir.routing.v1.Peer.
 * Use `create(PeerSchema)` to create a new message.
 */
export declare const PeerSchema: GenMessage<Peer>;

/**
 * @generated from enum agntcy.dir.routing.v1.PeerConnectionType
 */
export enum PeerConnectionType {
  /**
   * Sender does not have a connection to peer, and no extra information (default)
   *
   * @generated from enum value: PEER_CONNECTION_TYPE_NOT_CONNECTED = 0;
   */
  NOT_CONNECTED = 0,

  /**
   * Sender has a live connection to peer.
   *
   * @generated from enum value: PEER_CONNECTION_TYPE_CONNECTED = 1;
   */
  CONNECTED = 1,

  /**
   * Sender recently connected to peer.
   *
   * @generated from enum value: PEER_CONNECTION_TYPE_CAN_CONNECT = 2;
   */
  CAN_CONNECT = 2,

  /**
   * Sender made strong effort to connect to peer repeatedly but failed.
   *
   * @generated from enum value: PEER_CONNECTION_TYPE_CANNOT_CONNECT = 3;
   */
  CANNOT_CONNECT = 3,
}

/**
 * Describes the enum agntcy.dir.routing.v1.PeerConnectionType.
 */
export declare const PeerConnectionTypeSchema: GenEnum<PeerConnectionType>;

