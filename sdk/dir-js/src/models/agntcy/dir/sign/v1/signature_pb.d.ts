// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.9.0 with parameter "import_extension=js"
// @generated from file agntcy/dir/sign/v1/signature.proto (package agntcy.dir.sign.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file agntcy/dir/sign/v1/signature.proto.
 */
export declare const file_agntcy_dir_sign_v1_signature: GenFile;

/**
 * Signature is the signing data associated with a Record.
 * Multiple signatures can be associated with a single Record, 
 * ie 1 record : N record signatures.
 *
 * Storage and management of signatures is provided via
 * StoreService as a RecordReferrer object.
 *
 * Signature can be encoded into RecordReferrer object as follows:
 *   type = "agntcy.dir.sign.v1.Signature"
 *   data = Signature message encoded as JSON
 *
 * @generated from message agntcy.dir.sign.v1.Signature
 */
export declare type Signature = Message<"agntcy.dir.sign.v1.Signature"> & {
  /**
   * Metadata associated with the signature.
   *
   * @generated from field: map<string, string> annotations = 1;
   */
  annotations: { [key: string]: string };

  /**
   * Signing timestamp of the record in the RFC3339 format.
   * Specs: https://www.rfc-editor.org/rfc/rfc3339.html
   *
   * @generated from field: string signed_at = 2;
   */
  signedAt: string;

  /**
   * The signature algorithm used (e.g., "ECDSA_P256_SHA256").
   *
   * @generated from field: string algorithm = 3;
   */
  algorithm: string;

  /**
   * Base64-encoded signature.
   *
   * @generated from field: string signature = 4;
   */
  signature: string;

  /**
   * Base64-encoded signing certificate.
   *
   * @generated from field: string certificate = 5;
   */
  certificate: string;

  /**
   * Type of the signature content bundle.
   *
   * @generated from field: string content_type = 6;
   */
  contentType: string;

  /**
   * Base64-encoded signature bundle produced by the signer.
   * It is up to the client to interpret the content of the bundle.
   *
   * @generated from field: string content_bundle = 7;
   */
  contentBundle: string;
};

/**
 * Describes the message agntcy.dir.sign.v1.Signature.
 * Use `create(SignatureSchema)` to create a new message.
 */
export declare const SignatureSchema: GenMessage<Signature>;

