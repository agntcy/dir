// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.9.0 with parameter "import_extension=js"
// @generated from file agntcy/dir/core/v1/record.proto (package agntcy.dir.core.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file agntcy/dir/core/v1/record.proto.
 */
export declare const file_agntcy_dir_core_v1_record: GenFile;

/**
 * Defines a reference or a globally unique content identifier of a record.
 *
 * @generated from message agntcy.dir.core.v1.RecordRef
 */
export declare type RecordRef = Message<"agntcy.dir.core.v1.RecordRef"> & {
  /**
   * Globally-unique content identifier (CID) of the record.
   * Specs: https://github.com/multiformats/cid
   *
   * @generated from field: string cid = 1;
   */
  cid: string;
};

/**
 * Describes the message agntcy.dir.core.v1.RecordRef.
 * Use `create(RecordRefSchema)` to create a new message.
 */
export declare const RecordRefSchema: GenMessage<RecordRef>;

/**
 * Defines metadata about a record.
 *
 * @generated from message agntcy.dir.core.v1.RecordMeta
 */
export declare type RecordMeta = Message<"agntcy.dir.core.v1.RecordMeta"> & {
  /**
   * CID of the record.
   *
   * @generated from field: string cid = 1;
   */
  cid: string;

  /**
   * Annotations attached to the record.
   *
   * @generated from field: map<string, string> annotations = 2;
   */
  annotations: { [key: string]: string };

  /**
   * Schema version of the record.
   *
   * @generated from field: string schema_version = 3;
   */
  schemaVersion: string;

  /**
   * Creation timestamp of the record in the RFC3339 format.
   * Specs: https://www.rfc-editor.org/rfc/rfc3339.html
   *
   * @generated from field: string created_at = 4;
   */
  createdAt: string;
};

/**
 * Describes the message agntcy.dir.core.v1.RecordMeta.
 * Use `create(RecordMetaSchema)` to create a new message.
 */
export declare const RecordMetaSchema: GenMessage<RecordMeta>;

/**
 * Record is a generic object that encapsulates data of different Record types.
 *
 * Supported schemas:
 *
 * v0.3.1: https://schema.oasf.outshift.com/0.3.1/objects/agent
 * v0.7.0: https://schema.oasf.outshift.com/0.7.0/objects/record
 *
 * @generated from message agntcy.dir.core.v1.Record
 */
export declare type Record = Message<"agntcy.dir.core.v1.Record"> & {
  /**
   * @generated from field: google.protobuf.Struct data = 1;
   */
  data?: JsonObject;
};

/**
 * Describes the message agntcy.dir.core.v1.Record.
 * Use `create(RecordSchema)` to create a new message.
 */
export declare const RecordSchema: GenMessage<Record>;

/**
 * RecordReferrer represents a referrer object or an association
 * to a record. The actual structure of the referrer object can vary
 * depending on the type of referrer (e.g., signature, public key, etc.).
 *
 * RecordReferrer types in the `agntcy.dir.` namespace are reserved for
 * Directory-specific schemas and will be validated across Dir services.
 *
 * @generated from message agntcy.dir.core.v1.RecordReferrer
 */
export declare type RecordReferrer = Message<"agntcy.dir.core.v1.RecordReferrer"> & {
  /**
   * The type of the referrer.
   * For example, "agntcy.dir.sign.v1.Signature" for signatures.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Record reference to which this referrer is associated.
   *
   * @generated from field: agntcy.dir.core.v1.RecordRef record_ref = 2;
   */
  recordRef?: RecordRef;

  /**
   * Annotations attached to the referrer object.
   *
   * @generated from field: map<string, string> annotations = 3;
   */
  annotations: { [key: string]: string };

  /**
   * Creation timestamp of the record in the RFC3339 format.
   * Specs: https://www.rfc-editor.org/rfc/rfc3339.html
   *
   * @generated from field: string created_at = 4;
   */
  createdAt: string;

  /**
   * The actual data of the referrer.
   *
   * @generated from field: google.protobuf.Struct data = 5;
   */
  data?: JsonObject;
};

/**
 * Describes the message agntcy.dir.core.v1.RecordReferrer.
 * Use `create(RecordReferrerSchema)` to create a new message.
 */
export declare const RecordReferrerSchema: GenMessage<RecordReferrer>;

