# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

name: Test E2E

on:
  workflow_call:
    inputs:
      image_repo:
        required: true
        type: string
        description: 'Image repo to use.'
      image_tag:
        required: true
        type: string
        description: 'Image tag to use.'
      enable_coverage:
        required: false
        type: boolean
        default: false
        description: 'Whether to collect and upload E2E coverage to Codecov.'
    secrets:
      CODECOV_TOKEN:
        description: "Codecov token for uploading coverage reports"
        required: false

jobs:
  e2e:
    name: Test ${{ matrix.label }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - task: test:e2e:local
            label: "Local"
          - task: test:e2e:network
            label: "Network"
          - task: test:e2e:spire
            label: "Federation"
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Login to ghcr.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: notused
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Setup Cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: '1.25.2'
          check-latest: true
          cache-dependency-path: "**/*.sum"

      - name: Cache Go modules and build cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-e2e-${{ runner.os }}-${{ matrix.task }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-e2e-${{ runner.os }}-${{ matrix.task }}-
            go-e2e-${{ runner.os }}-
            go-${{ runner.os }}-

      - name: Compile CLI
        run: |
          task cli:compile

      - name: Download artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: tmp/artifacts
          merge-multiple: true

      - name: Download coverage image artifacts
        if: ${{ inputs.enable_coverage }}
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: tmp/coverage-artifacts
          pattern: '*-coverage'
          merge-multiple: true

      - name: Load images to local Docker registry
        run: |
          for image_archive in tmp/artifacts/*.tar; do
            docker load --input "$image_archive"
          done
          docker images

      - name: Load coverage images to local Docker registry
        if: ${{ inputs.enable_coverage }}
        run: |
          for image_archive in tmp/coverage-artifacts/*.tar; do
            docker load --input "$image_archive"
          done
          docker images

      - name: Run end-to-end tests
        env:
          IMAGE_REPO: ${{ inputs.image_repo }}
          IMAGE_TAG: ${{ inputs.image_tag }}
          E2E_COMPILE_OUTPUT_DIR: tmp
          E2E_COVERAGE_ENABLED: ${{ matrix.task != 'test:e2e:spire' && inputs.enable_coverage && 'true' || 'false' }}
        run: |
          # Use a random cluster name to avoid conflicts in concurrent runs.
          # Kind cluster names must be lowercase and can contain only letters and numbers.
          export KIND_CLUSTER_NAME=test-$(openssl rand -base64 12 | tr -dc 'a-z0-9')
          task ${{ matrix.task }}

      - name: Process E2E coverage
        if: ${{ inputs.enable_coverage && matrix.task != 'test:e2e:spire' }}
        run: |
          task test:e2e:coverage:process

      - name: Upload E2E coverage to Codecov
        if: ${{ inputs.enable_coverage && matrix.task != 'test:e2e:spire' }}
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: ${{ matrix.label == 'Local' && '.coverage/e2e/local-cli.out,.coverage/e2e/local-client.out,.coverage/e2e/server.out' || matrix.label == 'Network' && '.coverage/e2e/network.out,.coverage/e2e/server.out' || '.coverage/e2e/server.out' }}
          flags: e2e-${{ matrix.label }}
          fail_ci_if_error: false
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
