# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '42 5 * * 6'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: go
          build-mode: manual
        - language: javascript-typescript
          build-mode: none
        - language: python
          build-mode: none
        # CodeQL supports the following values keywords for 'language': 'actions', 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'rust', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Add any setup steps before running the `github/codeql-action/init` action.
    # This includes steps like installing compilers or runtimes (`actions/setup-node`
    # or others). This is typically only required for manual builds.
    # - name: Setup runtime (example)
    #   uses: actions/setup-example@v1

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # Enable security and quality queries for Go
        queries: +security-extended,security-and-quality
        # Use configuration file for Go-specific settings
        config: |
          name: "CodeQL Config"
          queries:
            - uses: security-extended
            - uses: security-and-quality
          paths-ignore:
            - "**/*.pb.go"
            - "**/mock_*.go"
            - "**/testdata/**"
            - "**/vendor/**"

    # If the analyze step fails for one of the languages you are analyzing with
    # "We were unable to automatically build your code", modify the matrix above
    # to set the build mode to "manual" for that language. Then modify this step
    # to build your code.
    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
    - name: Set up Go
      if: matrix.language == 'go'
      uses: actions/setup-go@v5
      with:
        go-version: '1.25.2'
        cache: false

    - name: Install Task
      if: matrix.language == 'go'
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install project dependencies
      if: matrix.language == 'go'
      shell: bash
      run: |
        # Install project dependencies using Task
        task deps

    - name: Run manual build steps
      if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        if [ "${{ matrix.language }}" == "go" ]; then
          echo "Building Go project using Taskfile..."

          # Generate API/protobuf files
          task gen

          # Tidy dependencies for all modules
          task deps:tidy

          # Build CLI binaries to ensure Go modules compile
          task cli:compile || echo "CLI compile failed, continuing with basic build..."

          # Fallback: build each module individually if needed
          echo "Ensuring all Go modules are built..."
          for gomod in $(find . -name go.mod -not -path "./tmp*"); do
            module_dir=$(dirname "$gomod")
            echo "Building module in $module_dir"
            cd "$module_dir"

            # Build all packages in the module (skip if no .go files)
            if ls *.go 1> /dev/null 2>&1 || find . -name "*.go" -not -path "./vendor/*" | head -1 | grep -q .; then
              go build ./... || echo "Build failed for $module_dir, continuing..."
            else
              echo "No Go files found in $module_dir, skipping build"
            fi

            # Return to root directory
            cd - > /dev/null
          done
        else
          echo 'If you are using a "manual" build mode for one or more of the' \
            'languages you are analyzing, replace this with the commands to build' \
            'your code, for example:'
          echo '  task build'
          echo '  task gen'
          exit 1
        fi

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{matrix.language}}"
