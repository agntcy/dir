name: "CodeQL Quick Scan"

on:
  workflow_dispatch:
    inputs:
      language:
        description: 'Language to scan (leave empty for all)'
        required: false
        type: choice
        options:
          - 'all'
          - 'go'
          - 'javascript-typescript'
          - 'python'
          - 'actions'
        default: 'all'
      queries:
        description: 'Query suite to use'
        required: false
        type: choice
        options:
          - 'security-extended'
          - 'security-and-quality'
          - 'code-scanning'
        default: 'security-extended'

permissions:
  contents: read
  security-events: write
  actions: read
  packages: read

jobs:
  codeql-scan:
    name: CodeQL Quick Scan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: go
          build-mode: manual
        - language: javascript-typescript
          build-mode: none
        - language: python
          build-mode: none
    steps:
    - name: Skip if language filter doesn't match
      if: ${{ inputs.language != 'all' && matrix.language != inputs.language }}
      run: |
        echo "Skipping ${{ matrix.language }} - not matching filter '${{ inputs.language }}'"
        exit 0

    - name: Checkout repository
      if: ${{ inputs.language == 'all' || matrix.language == inputs.language }}
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      if: ${{ inputs.language == 'all' || matrix.language == inputs.language }}
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        queries: +${{ inputs.queries }}

    - name: Set up Go
      if: ${{ (inputs.language == 'all' || matrix.language == inputs.language) && matrix.language == 'go' }}
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.2'
        cache: true

    - name: Install Task
      if: ${{ (inputs.language == 'all' || matrix.language == inputs.language) && matrix.language == 'go' }}
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install buf CLI
      if: ${{ (inputs.language == 'all' || matrix.language == inputs.language) && matrix.language == 'go' }}
      shell: bash
      run: |
        # Install buf for protobuf generation
        curl -sSL "https://github.com/bufbuild/buf/releases/latest/download/buf-$(uname -s)-$(uname -m)" -o /tmp/buf
        sudo mv /tmp/buf /usr/local/bin/buf
        sudo chmod +x /usr/local/bin/buf

    - name: Build Go project
      if: ${{ (inputs.language == 'all' || matrix.language == inputs.language) && matrix.build-mode == 'manual' && matrix.language == 'go' }}
      shell: bash
      run: |
        echo "🔨 Building Go project for CodeQL analysis..."

        # First, ensure all dependencies are available
        echo "Installing dependencies..."
        go mod download

        # Generate protobuf files if Taskfile exists
        if [ -f "Taskfile.yml" ]; then
          echo "Using Taskfile to generate code..."
          task deps || echo "Task deps failed, continuing..."
          task gen || echo "Task gen failed, continuing..."
        fi

        # Build each Go module explicitly
        echo "Building all Go modules..."
        find . -name "go.mod" -not -path "./vendor/*" -not -path "./.git/*" | while read -r gomod; do
          module_dir=$(dirname "$gomod")
          echo "Processing module: $module_dir"

          # Change to module directory
          pushd "$module_dir" > /dev/null

          # Download dependencies for this module
          go mod download || echo "Failed to download deps for $module_dir"

          # Find all Go packages in this module
          packages=$(go list ./... 2>/dev/null | grep -v '/vendor/' || echo "")

          if [ -n "$packages" ]; then
            echo "Building packages in $module_dir: $packages"
            # Build all packages - this ensures CodeQL can analyze them
            go build -v ./... || echo "Build failed for some packages in $module_dir"
          else
            echo "No buildable packages found in $module_dir"
          fi

          popd > /dev/null
        done

        echo "Go build completed successfully"

    - name: Perform CodeQL Analysis
      if: ${{ inputs.language == 'all' || matrix.language == inputs.language }}
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{matrix.language}}"

    - name: Generate scan summary
      if: ${{ inputs.language == 'all' || matrix.language == inputs.language }}
      run: |
        echo "## 🔍 CodeQL Quick Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Language:** ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
        echo "**Queries:** ${{ inputs.queries }}" >> $GITHUB_STEP_SUMMARY
        echo "**Build Mode:** ${{ matrix.build-mode }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Analysis completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "📊 Check the Security tab for detailed results" >> $GITHUB_STEP_SUMMARY