# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

name: Release

on:
  workflow_call:
    inputs:
      image_repo:
        required: true
        type: string
        description: "Image repo to use."
      release_tag:
        required: true
        type: string
        description: "Release tag for all components."

jobs:
  image:
    name: Image
    uses: ./.github/workflows/reusable-build.yaml
    with:
      image_repo: ${{ inputs.image_repo }}
      image_tag: ${{ inputs.release_tag }}
      push: true

  chart:
    name: Helm chart
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart: [dir, dirctl]
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: notused
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Setup Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1

      - name: Helm update
        shell: bash
        run: helm dependency update install/charts/${{ matrix.chart }}

      - name: Helm lint
        shell: bash
        run: helm lint install/charts/${{ matrix.chart }} --with-subcharts

      - name: Helm package
        id: build
        shell: bash
        run: |
          helm package install/charts/${{ matrix.chart }} --dependency-update --version ${{ inputs.release_tag }}
          echo "package=${{ matrix.chart }}-${{ inputs.release_tag }}.tgz" >> "$GITHUB_OUTPUT"

      - name: Helm push to GHCR OCI registry
        shell: bash
        run: |
          echo "ðŸš§ Pushing ${{ steps.build.outputs.package }} to GHCR OCI registry"
          helm push ${{ steps.build.outputs.package }} oci://${{ inputs.image_repo }}/dir/helm-charts

  cli:
    name: CLI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: '1.24.5'
          check-latest: true
          cache-dependency-path: "**/*.sum"

      - name: Build
        run: |
          task cli:compile:all

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: artifacts
          path: bin
          if-no-files-found: error

  sdk:
    name: SDK
    uses: ./.github/workflows/reusable-release-sdk.yaml
    with:
      javascript-release: true
      python-release: true

  release:
    name: Release
    needs:
      - image
      - chart
      - cli
      - sdk
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.3
        with:
          token: ${{ secrets.GITHUB_TOKEN  }}
          tag_name: ${{ inputs.release_tag }}
          name: Release ${{ inputs.release_tag }}
          draft: true
          prerelease: false
          files: |
            bin/dirctl-darwin-amd64
            bin/dirctl-darwin-arm64
            bin/dirctl-linux-amd64
            bin/dirctl-linux-arm64
            bin/dirctl-windows-amd64

  brew:
    name: Update Brew
    needs:
      - release
    uses: ./.github/workflows/reusable-brew-update.yaml
    with:
      create-pr: true
      run-without-diff: false
