# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from core.v1 import object_pb2 as core_dot_v1_dot_object__pb2
from core.v1 import record_pb2 as core_dot_v1_dot_record__pb2


class RecordObjectManagerStub(object):
    """Converts Object to a RecordObject and vice versa.
    This is client-side service only.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConvertObjectToRecord = channel.unary_unary(
                '/core.v1.RecordObjectManager/ConvertObjectToRecord',
                request_serializer=core_dot_v1_dot_object__pb2.Object.SerializeToString,
                response_deserializer=core_dot_v1_dot_record__pb2.RecordObject.FromString,
                _registered_method=True)
        self.ConvertRecordToObject = channel.unary_unary(
                '/core.v1.RecordObjectManager/ConvertRecordToObject',
                request_serializer=core_dot_v1_dot_record__pb2.RecordObject.SerializeToString,
                response_deserializer=core_dot_v1_dot_object__pb2.Object.FromString,
                _registered_method=True)


class RecordObjectManagerServicer(object):
    """Converts Object to a RecordObject and vice versa.
    This is client-side service only.
    """

    def ConvertObjectToRecord(self, request, context):
        """Converts an Object to a Record.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConvertRecordToObject(self, request, context):
        """Converts a Record to an Object.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RecordObjectManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConvertObjectToRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertObjectToRecord,
                    request_deserializer=core_dot_v1_dot_object__pb2.Object.FromString,
                    response_serializer=core_dot_v1_dot_record__pb2.RecordObject.SerializeToString,
            ),
            'ConvertRecordToObject': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertRecordToObject,
                    request_deserializer=core_dot_v1_dot_record__pb2.RecordObject.FromString,
                    response_serializer=core_dot_v1_dot_object__pb2.Object.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'core.v1.RecordObjectManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('core.v1.RecordObjectManager', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RecordObjectManager(object):
    """Converts Object to a RecordObject and vice versa.
    This is client-side service only.
    """

    @staticmethod
    def ConvertObjectToRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.RecordObjectManager/ConvertObjectToRecord',
            core_dot_v1_dot_object__pb2.Object.SerializeToString,
            core_dot_v1_dot_record__pb2.RecordObject.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConvertRecordToObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/core.v1.RecordObjectManager/ConvertRecordToObject',
            core_dot_v1_dot_record__pb2.RecordObject.SerializeToString,
            core_dot_v1_dot_object__pb2.Object.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
