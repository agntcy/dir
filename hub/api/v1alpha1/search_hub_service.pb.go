// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: saas/v1alpha1/search_hub_service.proto

package saasv1alpha1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchHubResponseRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Name                string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	UserId              string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrganizationId      string                 `protobuf:"bytes,7,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	RepoType            string                 `protobuf:"bytes,8,opt,name=repo_type,json=repoType,proto3" json:"repo_type,omitempty"`
	QueryReturnMetadata *structpb.Value        `protobuf:"bytes,9,opt,name=query_return_metadata,json=queryReturnMetadata,proto3" json:"query_return_metadata,omitempty"` // Metadata related to the search query
	Explanation         string                 `protobuf:"bytes,10,opt,name=explanation,proto3" json:"explanation,omitempty"`                                             // Explanation of the record's relevance
	Version             string                 `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	RepositoryId        *string                `protobuf:"bytes,12,opt,name=repository_id,json=repositoryId,proto3,oneof" json:"repository_id,omitempty"`
	Description         *string                `protobuf:"bytes,13,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Authors             []string               `protobuf:"bytes,14,rep,name=authors,proto3" json:"authors,omitempty"`
	Modules             []string               `protobuf:"bytes,15,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *SearchHubResponseRecord) Reset() {
	*x = SearchHubResponseRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saas_v1alpha1_search_hub_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHubResponseRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHubResponseRecord) ProtoMessage() {}

func (x *SearchHubResponseRecord) ProtoReflect() protoreflect.Message {
	mi := &file_saas_v1alpha1_search_hub_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHubResponseRecord.ProtoReflect.Descriptor instead.
func (*SearchHubResponseRecord) Descriptor() ([]byte, []int) {
	return file_saas_v1alpha1_search_hub_service_proto_rawDescGZIP(), []int{0}
}

func (x *SearchHubResponseRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchHubResponseRecord) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SearchHubResponseRecord) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SearchHubResponseRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchHubResponseRecord) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchHubResponseRecord) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *SearchHubResponseRecord) GetRepoType() string {
	if x != nil {
		return x.RepoType
	}
	return ""
}

func (x *SearchHubResponseRecord) GetQueryReturnMetadata() *structpb.Value {
	if x != nil {
		return x.QueryReturnMetadata
	}
	return nil
}

func (x *SearchHubResponseRecord) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

func (x *SearchHubResponseRecord) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SearchHubResponseRecord) GetRepositoryId() string {
	if x != nil && x.RepositoryId != nil {
		return *x.RepositoryId
	}
	return ""
}

func (x *SearchHubResponseRecord) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *SearchHubResponseRecord) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *SearchHubResponseRecord) GetModules() []string {
	if x != nil {
		return x.Modules
	}
	return nil
}

type SearchHubFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordTypes  []string        `protobuf:"bytes,1,rep,name=record_types,json=recordTypes,proto3" json:"record_types,omitempty"`        // Filter by record types
	CategoryIds  []string        `protobuf:"bytes,2,rep,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`        // Filter by category IDs
	LocatorTypes []string        `protobuf:"bytes,3,rep,name=locator_types,json=locatorTypes,proto3" json:"locator_types,omitempty"`     // Filter by locator types
	ShowPrivate  *bool           `protobuf:"varint,4,opt,name=show_private,json=showPrivate,proto3,oneof" json:"show_private,omitempty"` // Whether to show private repositories
	ModuleNames  []string        `protobuf:"bytes,5,rep,name=module_names,json=moduleNames,proto3" json:"module_names,omitempty"`        // Filter by module names
	Description  *string         `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`                     // Filter by description
	CreatedAt    *TimestampRange `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`        // Filter by creation date range
}

func (x *SearchHubFilters) Reset() {
	*x = SearchHubFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saas_v1alpha1_search_hub_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHubFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHubFilters) ProtoMessage() {}

func (x *SearchHubFilters) ProtoReflect() protoreflect.Message {
	mi := &file_saas_v1alpha1_search_hub_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHubFilters.ProtoReflect.Descriptor instead.
func (*SearchHubFilters) Descriptor() ([]byte, []int) {
	return file_saas_v1alpha1_search_hub_service_proto_rawDescGZIP(), []int{1}
}

func (x *SearchHubFilters) GetRecordTypes() []string {
	if x != nil {
		return x.RecordTypes
	}
	return nil
}

func (x *SearchHubFilters) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *SearchHubFilters) GetLocatorTypes() []string {
	if x != nil {
		return x.LocatorTypes
	}
	return nil
}

func (x *SearchHubFilters) GetShowPrivate() bool {
	if x != nil && x.ShowPrivate != nil {
		return *x.ShowPrivate
	}
	return false
}

func (x *SearchHubFilters) GetModuleNames() []string {
	if x != nil {
		return x.ModuleNames
	}
	return nil
}

func (x *SearchHubFilters) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *SearchHubFilters) GetCreatedAt() *TimestampRange {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type SearchHubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query           string            `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Filters         *SearchHubFilters `protobuf:"bytes,2,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
	OrganizationIds []string          `protobuf:"bytes,3,rep,name=organization_ids,json=organizationIds,proto3" json:"organization_ids,omitempty"` // List of organization IDs to search within
}

func (x *SearchHubRequest) Reset() {
	*x = SearchHubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saas_v1alpha1_search_hub_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHubRequest) ProtoMessage() {}

func (x *SearchHubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saas_v1alpha1_search_hub_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHubRequest.ProtoReflect.Descriptor instead.
func (*SearchHubRequest) Descriptor() ([]byte, []int) {
	return file_saas_v1alpha1_search_hub_service_proto_rawDescGZIP(), []int{2}
}

func (x *SearchHubRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchHubRequest) GetFilters() *SearchHubFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchHubRequest) GetOrganizationIds() []string {
	if x != nil {
		return x.OrganizationIds
	}
	return nil
}

type SearchHubResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecommendedRecords []*SearchHubResponseRecord `protobuf:"bytes,1,rep,name=recommended_records,json=recommendedRecords,proto3" json:"recommended_records,omitempty"`
	CandidateRecords   []*SearchHubResponseRecord `protobuf:"bytes,2,rep,name=candidate_records,json=candidateRecords,proto3" json:"candidate_records,omitempty"`
}

func (x *SearchHubResponse) Reset() {
	*x = SearchHubResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saas_v1alpha1_search_hub_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHubResponse) ProtoMessage() {}

func (x *SearchHubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saas_v1alpha1_search_hub_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHubResponse.ProtoReflect.Descriptor instead.
func (*SearchHubResponse) Descriptor() ([]byte, []int) {
	return file_saas_v1alpha1_search_hub_service_proto_rawDescGZIP(), []int{3}
}

func (x *SearchHubResponse) GetRecommendedRecords() []*SearchHubResponseRecord {
	if x != nil {
		return x.RecommendedRecords
	}
	return nil
}

func (x *SearchHubResponse) GetCandidateRecords() []*SearchHubResponseRecord {
	if x != nil {
		return x.CandidateRecords
	}
	return nil
}

var File_saas_v1alpha1_search_hub_service_proto protoreflect.FileDescriptor

var file_saas_v1alpha1_search_hub_service_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x61, 0x61, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x68, 0x75, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x61, 0x61, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23,
	0x73, 0x61, 0x61, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcb, 0x04, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x75, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x70, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x70, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x72, 0x03, 0x18, 0xde, 0x02, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xe2, 0x02, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x75, 0x62, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x02, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x48, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x3e, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x75, 0x62, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x48, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x13, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x61, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x48, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x53, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x32, 0x7c, 0x0a, 0x10, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x68, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1f, 0x2e, 0x73, 0x61, 0x61, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x48, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x61, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x48, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0xce, 0x01, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42,
	0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x75, 0x74, 0x73, 0x68, 0x69, 0x66, 0x74, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x2f, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2d, 0x64, 0x69, 0x72, 0x2d, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2d, 0x62, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x61, 0x61,
	0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x73, 0x61, 0x61, 0x73, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x0d,
	0x53, 0x61, 0x61, 0x73, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x0d,
	0x53, 0x61, 0x61, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x19,
	0x53, 0x61, 0x61, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x53, 0x61, 0x61, 0x73,
	0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_saas_v1alpha1_search_hub_service_proto_rawDescOnce sync.Once
	file_saas_v1alpha1_search_hub_service_proto_rawDescData = file_saas_v1alpha1_search_hub_service_proto_rawDesc
)

func file_saas_v1alpha1_search_hub_service_proto_rawDescGZIP() []byte {
	file_saas_v1alpha1_search_hub_service_proto_rawDescOnce.Do(func() {
		file_saas_v1alpha1_search_hub_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_saas_v1alpha1_search_hub_service_proto_rawDescData)
	})
	return file_saas_v1alpha1_search_hub_service_proto_rawDescData
}

var file_saas_v1alpha1_search_hub_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_saas_v1alpha1_search_hub_service_proto_goTypes = []interface{}{
	(*SearchHubResponseRecord)(nil), // 0: saas.v1alpha1.SearchHubResponseRecord
	(*SearchHubFilters)(nil),        // 1: saas.v1alpha1.SearchHubFilters
	(*SearchHubRequest)(nil),        // 2: saas.v1alpha1.SearchHubRequest
	(*SearchHubResponse)(nil),       // 3: saas.v1alpha1.SearchHubResponse
	(*timestamppb.Timestamp)(nil),   // 4: google.protobuf.Timestamp
	(*structpb.Value)(nil),          // 5: google.protobuf.Value
	(*TimestampRange)(nil),          // 6: saas.v1alpha1.TimestampRange
}
var file_saas_v1alpha1_search_hub_service_proto_depIdxs = []int32{
	4, // 0: saas.v1alpha1.SearchHubResponseRecord.created_at:type_name -> google.protobuf.Timestamp
	4, // 1: saas.v1alpha1.SearchHubResponseRecord.updated_at:type_name -> google.protobuf.Timestamp
	5, // 2: saas.v1alpha1.SearchHubResponseRecord.query_return_metadata:type_name -> google.protobuf.Value
	6, // 3: saas.v1alpha1.SearchHubFilters.created_at:type_name -> saas.v1alpha1.TimestampRange
	1, // 4: saas.v1alpha1.SearchHubRequest.filters:type_name -> saas.v1alpha1.SearchHubFilters
	0, // 5: saas.v1alpha1.SearchHubResponse.recommended_records:type_name -> saas.v1alpha1.SearchHubResponseRecord
	0, // 6: saas.v1alpha1.SearchHubResponse.candidate_records:type_name -> saas.v1alpha1.SearchHubResponseRecord
	2, // 7: saas.v1alpha1.SearchHubService.Search:input_type -> saas.v1alpha1.SearchHubRequest
	3, // 8: saas.v1alpha1.SearchHubService.Search:output_type -> saas.v1alpha1.SearchHubResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_saas_v1alpha1_search_hub_service_proto_init() }
func file_saas_v1alpha1_search_hub_service_proto_init() {
	if File_saas_v1alpha1_search_hub_service_proto != nil {
		return
	}
	file_saas_v1alpha1_record_proto_init()
	file_saas_v1alpha1_timestamp_range_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_saas_v1alpha1_search_hub_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHubResponseRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saas_v1alpha1_search_hub_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHubFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saas_v1alpha1_search_hub_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saas_v1alpha1_search_hub_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHubResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_saas_v1alpha1_search_hub_service_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_saas_v1alpha1_search_hub_service_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_saas_v1alpha1_search_hub_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_saas_v1alpha1_search_hub_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_saas_v1alpha1_search_hub_service_proto_goTypes,
		DependencyIndexes: file_saas_v1alpha1_search_hub_service_proto_depIdxs,
		MessageInfos:      file_saas_v1alpha1_search_hub_service_proto_msgTypes,
	}.Build()
	File_saas_v1alpha1_search_hub_service_proto = out.File
	file_saas_v1alpha1_search_hub_service_proto_rawDesc = nil
	file_saas_v1alpha1_search_hub_service_proto_goTypes = nil
	file_saas_v1alpha1_search_hub_service_proto_depIdxs = nil
}
