apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "spire.agent.fullname" . }}
  namespace: {{ include "spire.namespace" . }}
  labels:
    {{- include "spire.agent.labels" . | nindent 4 }}
  {{- with (include "spire.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
data:
  agent.conf: |
    agent {
      data_dir = "{{ .Values.agent.config.dataDir }}"
      log_level = "{{ .Values.agent.config.logLevel }}"
      server_address = "{{ .Values.agent.config.serverAddress }}"
      server_port = "{{ .Values.agent.config.serverPort }}"
      socket_path = "{{ .Values.agent.config.socketPath }}"
      trust_bundle_path = "{{ .Values.agent.config.trustBundlePath }}"
      trust_domain = "{{ include "spire.trustDomain" . }}"
    }

    plugins {
      NodeAttestor "k8s_psat" {
        plugin_data {
          cluster = "{{ include "spire.clusterName" . }}"
        }
      }

      {{- if .Values.agent.config.keyManager.memory.enabled }}
      KeyManager "memory" {
        plugin_data {
        }
      }
      {{- end }}

      WorkloadAttestor "k8s" {
        plugin_data {
          skip_kubelet_verification = {{ .Values.agent.config.workloadAttestor.k8s.skipKubeletVerification }}
          node_name_env = "{{ .Values.agent.config.workloadAttestor.k8s.nodeNameEnv }}"
        }
      }

      {{- if .Values.agent.config.workloadAttestor.unix.enabled }}
      WorkloadAttestor "unix" {
          plugin_data {
          }
      }
      {{- end }}
    }

    {{- if .Values.agent.healthChecks.enabled }}
    health_checks {
      listener_enabled = true
      bind_address = "{{ .Values.agent.healthChecks.bindAddress }}"
      bind_port = "{{ .Values.agent.healthChecks.bindPort }}"
      live_path = "{{ .Values.agent.healthChecks.livePath }}"
      ready_path = "{{ .Values.agent.healthChecks.readyPath }}"
    }
    {{- end }}
