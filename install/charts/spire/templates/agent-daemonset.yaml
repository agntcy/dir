apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "spire.agent.fullname" . }}
  namespace: {{ include "spire.namespace" . }}
  labels:
    {{- include "spire.agent.labels" . | nindent 4 }}
  {{- with (include "spire.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "spire.agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "spire.agent.selectorLabels" . | nindent 8 }}
      {{- with (include "spire.annotations" .) }}
      annotations:
        {{- . | nindent 8 }}
      {{- end }}
    spec:
      hostPID: {{ .Values.agent.hostPID }}
      hostNetwork: {{ .Values.agent.hostNetwork }}
      dnsPolicy: {{ .Values.agent.dnsPolicy }}
      serviceAccountName: {{ include "spire.agent.serviceAccountName" . }}
      {{- with .Values.agent.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init
          image: "{{ .Values.agent.initContainer.image.repository }}:{{ .Values.agent.initContainer.image.tag }}"
          imagePullPolicy: {{ .Values.agent.initContainer.image.pullPolicy }}
          args: 
            - "-t"
            - "{{ .Values.agent.initContainer.waitTimeout }}"
            - "{{ .Values.agent.config.serverAddress }}:{{ .Values.agent.config.serverPort }}"
      containers:
        - name: spire-agent
          image: "{{ .Values.agent.image.repository }}:{{ .Values.agent.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.agent.image.pullPolicy }}
          args: 
            - "-config"
            - "/run/spire/config/agent.conf"
          env:
          - name: {{ .Values.agent.config.workloadAttestor.k8s.nodeNameEnv }}
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          ports:
            {{- if .Values.agent.healthChecks.enabled }}
            - containerPort: {{ .Values.agent.healthChecks.bindPort }}
              name: healthz
              protocol: TCP
            {{- end }}
          volumeMounts:
            - name: spire-config
              mountPath: /run/spire/config
              readOnly: true
            - name: spire-bundle
              mountPath: /run/spire/bundle
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: false
            - name: spire-token
              mountPath: /var/run/secrets/tokens
          {{- if .Values.agent.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.agent.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.agent.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.agent.readinessProbe | nindent 12 }}
          {{- end }}
          {{- with .Values.agent.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: spire-config
          configMap:
            name: {{ include "spire.agent.fullname" . }}
        - name: spire-bundle
          configMap:
            name: {{ .Values.bundle.configMap.name | default (printf "%s-bundle" (include "spire.fullname" .)) }}
        - name: spire-agent-socket
          hostPath:
            path: {{ .Values.agent.socketPath }}
            type: DirectoryOrCreate
        - name: spire-token
          projected:
            sources:
            - serviceAccountToken:
                path: spire-agent
                expirationSeconds: {{ .Values.agent.serviceAccountToken.expirationSeconds }}
                audience: {{ .Values.agent.serviceAccountToken.audience }}
