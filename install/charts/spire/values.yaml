# Default values for spire.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
global:
  spire:
    # SPIFFE trust domain
    trustDomain: "example.org"
    # Cluster name for node attestation
    clusterName: "demo-cluster"
  
nameOverride: ""
fullnameOverride: ""

# SPIRE Server configuration
server:
  # Server container image
  image:
    repository: "ghcr.io/spiffe/spire-server"
    tag: "1.11.2"
    pullPolicy: IfNotPresent

  # Number of replicas
  replicaCount: 1

  # Service account
  serviceAccount:
    create: true
    name: "spire-server"
    annotations: {}

  # Service configuration
  service:
    type: ClusterIP
    port: 8081
    targetPort: 8081

  # Resource limits and requests
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # Node selector, tolerations and affinity
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Security context
  securityContext:
    fsGroup: 1000

  # Persistent volume for data storage
  persistence:
    enabled: true
    size: 1Gi
    storageClass: ""
    accessModes:
      - ReadWriteOnce

  # Health check configuration
  healthChecks:
    enabled: true
    bindAddress: "0.0.0.0"
    bindPort: 8080
    livePath: "/live"
    readyPath: "/ready"

  # Liveness probe configuration
  livenessProbe:
    httpGet:
      path: /live
      port: 8080
    failureThreshold: 2
    initialDelaySeconds: 15
    periodSeconds: 60
    timeoutSeconds: 3

  # Readiness probe configuration
  readinessProbe:
    httpGet:
      path: /ready
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5

  # Server configuration
  config:
    bindAddress: "0.0.0.0"
    bindPort: 8081
    socketPath: "/tmp/spire-server/private/api.sock"
    dataDir: "/run/spire/data"
    logLevel: "DEBUG"
    caKeyType: "rsa-2048"
    
    # CA subject configuration
    caSubject:
      country: ["US"]
      organization: ["SPIFFE"]
      commonName: ""

    # DataStore plugin configuration
    dataStore:
      sql:
        databaseType: "sqlite3"
        connectionString: "/run/spire/data/datastore.sqlite3"

    # Node attestor configuration
    nodeAttestor:
      k8sPsat:
        serviceAccountAllowList: ["spire:spire-agent"]

    # Key manager configuration
    keyManager:
      disk:
        keysPath: "/run/spire/data/keys.json"

    # Notifier configuration
    notifier:
      k8sBundle:
        enabled: true

# SPIRE Agent configuration
agent:
  # Agent container image
  image:
    repository: "ghcr.io/spiffe/spire-agent"
    tag: "1.11.2"
    pullPolicy: IfNotPresent

  # Service account
  serviceAccount:
    create: true
    name: "spire-agent"
    annotations: {}

  # Init container configuration
  initContainer:
    image:
      repository: "cgr.dev/chainguard/wait-for-it"
      tag: "latest"
      pullPolicy: IfNotPresent
    waitTimeout: 30

  # Resource limits and requests
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # Node selector, tolerations and affinity
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Health check configuration
  healthChecks:
    enabled: true
    bindAddress: "0.0.0.0"
    bindPort: 8080
    livePath: "/live"
    readyPath: "/ready"

  # Liveness probe configuration
  livenessProbe:
    httpGet:
      path: /live
      port: 8080
    failureThreshold: 2
    initialDelaySeconds: 15
    periodSeconds: 60
    timeoutSeconds: 3

  # Readiness probe configuration
  readinessProbe:
    httpGet:
      path: /ready
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5

  # Host network and PID settings
  hostNetwork: true
  hostPID: true
  dnsPolicy: ClusterFirstWithHostNet

  # Socket path on host
  socketPath: "/run/spire/sockets"

  # Service account token configuration
  serviceAccountToken:
    audience: "spire-server"
    expirationSeconds: 7200

  # Agent configuration
  config:
    serverAddress: "spire-server"
    serverPort: 8081
    socketPath: "/run/spire/sockets/agent.sock"
    trustDomain: "example.org"
    dataDir: "/run/spire"
    logLevel: "DEBUG"
    trustBundlePath: "/run/spire/bundle/bundle.crt"

    # Key manager configuration
    keyManager:
      memory:
        enabled: true

    # Node attestor configuration
    nodeAttestor:
      k8sPsat:
        cluster: "demo-cluster"

    # Workload attestor configuration
    workloadAttestor:
      k8s:
        skipKubeletVerification: true
        nodeNameEnv: "MY_NODE_NAME"
      unix:
        enabled: true

# Bundle ConfigMap configuration
bundle:
  configMap:
    create: true
    name: "spire-bundle"

# RBAC configuration
rbac:
  create: true

# Common labels to be applied to all resources
commonLabels: {}

# Common annotations to be applied to all resources
commonAnnotations: {}