# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.autoscaling.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if eq .Values.zot.mountConfig false }}
      initContainers:
        - name: init-zot-config
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "Initializing ZOT config..."
              if [ ! -f /etc/zot/config.json ]; then
                echo "Creating ZOT config from template..."
                cat > /etc/zot/config.json << 'EOF'
              {{- tpl (index .Values.zot.configFiles "config.json") . | nindent 14 }}
              EOF
                chmod 666 /etc/zot/config.json
                echo "Config initialized successfully"
              else
                echo "Config exists, ensuring it's writable..."
                chmod 666 /etc/zot/config.json
                echo "Config permissions updated"
              fi
              echo "Setting directory permissions..."
              chmod 777 /etc/zot
              echo "Initialization complete"
          volumeMounts:
            - name: zot-config-storage
              mountPath: /etc/zot
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: DIRECTORY_LOGGER_LOG_LEVEL
              value: {{ .Values.log_level }}
            - name: DIRECTORY_LOGGER_LOG_FORMAT
              value: {{ .Values.log_format }}
            - name: DIRECTORY_SERVER_LOGGING_VERBOSE
              value: "{{ .Values.grpc_logging_verbose }}"
            {{- if eq .Values.spire.enabled true }}
            - name: DIRECTORY_SERVER_AUTHZ_ENABLED
              value: "true"
            - name: DIRECTORY_SERVER_AUTHZ_SOCKET_PATH
              value: "unix:/run/spire/agent-sockets/api.sock"
            - name: DIRECTORY_SERVER_AUTHZ_TRUST_DOMAIN
              value: {{ .Values.spire.trustDomain }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ .Values.config.listen_address | default "0.0.0.0:8888" | splitList ":" | last | int }}
              protocol: TCP
            - name: routing
              {{- if .Values.config.routing.listen_address }}
              containerPort: {{ (split "/" .Values.config.routing.listen_address)._4 }}
              {{- else }}
              containerPort: 8999
              {{- end }}
              protocol: TCP
          {{- if or (eq .Values.config.authn.enabled true) (eq .Values.spire.enabled true) }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.config.listen_address | default "0.0.0.0:8888" | splitList ":" | last | int }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: {{ .Values.config.listen_address | default "0.0.0.0:8888" | splitList ":" | last | int }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 6
          {{- else }}
          livenessProbe:
            grpc:
              port: {{ .Values.config.listen_address | default "0.0.0.0:8888" | splitList ":" | last | int }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            grpc:
              port: {{ .Values.config.listen_address | default "0.0.0.0:8888" | splitList ":" | last | int }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 6
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/agntcy/dir/server.config.yml
              subPath: server.config.yml
            {{- if .Values.privKey }}
            - name: secret-volume
              mountPath: {{ .Values.config.routing.key_path }}
              subPath: node.privkey
              readOnly: true
            {{- end }}
            {{- if eq .Values.spire.enabled true }}
            - name: spire-agent-socket
              mountPath: /run/spire/agent-sockets
              readOnly: false 
            {{- end }}
            {{- if .Values.pvc.create }}
            - name: routing-data
              mountPath: {{ .Values.config.routing.datastore_dir }}
            {{- end }}
            {{- if eq .Values.zot.mountConfig false }}
            - name: zot-config-storage
              mountPath: /etc/zot
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "chart.fullname" . }}
        {{- if eq .Values.spire.enabled true }}
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/agent-sockets
            type: Directory
        {{- end }}
        {{- if .Values.privKey }}
        - name: secret-volume
          secret:
            secretName: {{ include "chart.fullname" . }}
            items:
              - key: node.privkey
                path: node.privkey
        {{- end }}
        {{- if .Values.pvc.create }}
        - name: routing-data
          persistentVolumeClaim:
            claimName: {{ include "chart.fullname" . }}-pvc
        {{- end }}
        {{- if eq .Values.zot.mountConfig false }}
        - name: zot-config-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-zot-config
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
